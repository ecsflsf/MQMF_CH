update.packages(checkBuilt=TRUE, ask=FALSE)
# Conduct an MCMC using simpspmC on the abdat Fox SPM
# This means you will need to compile simpspmC from appendix
set.seed(698381) #for repeatability, possibly only on Windows10
begin <- gettime()  # to enable the time taken to be calculated
library(tinytex)
tinytex:::install_prebuilt(pkg = "d:/tinytex.zip")
tinytex:::install_prebuilt(pkg = "d:/TinyTeX-v2024.09.zip")
tinytex::tinytex_root()
tl_pkgs()
tlmgr_update()
tlmgr_search("ctex.sty")
tlmgr_update()
tlmgr_update()
tlmgr_repo(url = "http://mirrors.tuna.ustc.edu.cn/CTAN/")
tlmgr_install("ctex")
tinytex::tlmgr_repo('http://mirrors.tuna.tsinghua.edu.cn/CTAN/')
tlmgr_install("ctex")
tl_pkgs()
tlmgr_install('ctex')
tlmgr_search('ctex.sty')
options(timeout = 7200)
tinytex::install_tinytex(bundle = 'TinyTeX-2')
tlmgr_search('ctex.sty')
length(tinytex::tl_pkgs())
tinytex::tl_pkgs()
library(tinytex)
tinytex::uninstall_tinytex()
tinytex:::install_prebuilt(pkg = "D:/TinyTeX.zip")
tinytex:::install_prebuilt(pkg = "D:/TinyTeXTinyTeX-v2024.09.zip")
tinytex:::install_prebuilt(pkg = "D:/TinyTeX-v2024.09.zip")
tinytex_root()
tinytex::uninstall_tinytex()
tinytex:::install_prebuilt(pkg = "D:/TinyTeX-v2024.09.zip", dir = "d:/TinyTex")
tinytex_root()
tinytex::tlmgr_repo('http://mirrors.tuna.tsinghua.edu.cn/CTAN/')
library(tinytex)
length(tinytex::tl_pkgs())
tinytex_root()
tlmgr_search('ctex')
tl_pkgs()
#| echo: false
library(MQMF)
#| label: fig-sm_1
#| fig-cap:  "离散的Schaefer(1954, 1957) 剩余产量模型以及与资源量相关的线性密度依赖平衡的全部产量曲线。"
surprod <- function(Nt,r,K) return((r*Nt)*(1-(Nt/K)))
densdep <- function(Nt,K) return((1-(Nt/K)))
r <- 1.2; K <- 1000.0; Nt <- seq(10,1000,10)
par(mfrow=c(2,1),mai=c(0.4,0.4,0.05,0.05),oma=c(0.0,0,0.0,0.0))
par(cex=0.75, mgp=c(1.35,0.35,0), font.axis=7,font=7,font.lab=7)
plot1(Nt,surprod(Nt,r,K),xlab="Population Nt",defpar=FALSE,
ylab="Production")
plot1(Nt,densdep(Nt,K),xlab="Population Nt",defpar=FALSE,
ylab="Density-Dependence")
# label: fig-sm_1
# fig-cap: "离散的Schaefer(1954, 1957) 剩余产量模型以及与资源量相关的线性密度依赖平衡的全部产量曲线。"
#Code to produce Figure 3.1. Note the two one-line functions
surprod <- function(Nt,r,K) return((r*Nt)*(1-(Nt/K)))
densdep <- function(Nt,K) return((1-(Nt/K)))
r <- 1.2; K <- 1000.0; Nt <- seq(10,1000,10)
par(mfrow=c(2,1),mai=c(0.4,0.4,0.05,0.05),oma=c(0.0,0,0.0,0.0))
par(cex=0.75, mgp=c(1.35,0.35,0), font.axis=7,font=7,font.lab=7)
plot1(Nt,surprod(Nt,r,K),xlab="Population Nt",defpar=FALSE,
ylab="Production")
plot1(Nt,densdep(Nt,K),xlab="Population Nt",defpar=FALSE,
ylab="Density-Dependence")
install.packages(c("DescTools", "duckdb", "fpc", "ggplot.multistats", "graphlayouts", "mapmixture", "MLZ", "PBSmapping", "prabclus", "renv", "rio"))
#| echo: false
library(MQMF)
#vB growth curve fit to Pitcher and Macdonald derived seasonal data
data(minnow); week <- minnow$week; length <- minnow$length
pars <- c(75,0.1,-10.0,3.5); label=c("Linf","K","t0","sigma")
bestvB <- nlm(f=negNLL,p=pars,funk=vB,ages=week,observed=length,
typsize=magnitude(pars))
predL <- vB(bestvB$estimate,0:160)
outfit(bestvB,backtran = FALSE,title="Non-Seasonal vB",parnames=label)
#| fig-5_1
#| fig-cap: |
#|   年龄长度数据来自 Pitcher 和 Macdonald（1973 年），
#|   与最佳拟合的 von Bertalanffy 曲线相比，显示出生长率的强烈季节性波动。
#|   下图中的正态随机残差的季节性模式非常明显，并随着年龄的增长而减小。
#plot the non-seasonal fit and its residuals.  Figure 5.1
parset(plots=c(2,1),margin=c(0.35,0.45,0.02,0.05))
plot1(week,length,type="p",cex=1.0,col=2,xlab="Weeks",pch=16,
ylab="Length (mm)",defpar=FALSE)
lines(0:160,predL,lwd=2,col=1)
# calculate and plot the residuals
resids <- length - vB(bestvB$estimate,week)
plot1(week,resids,type="l",col="darkgrey",cex=0.9,lwd=2,
xlab="Weeks",lty=3,ylab="Normal Residuals",defpar=FALSE)
points(week,resids,pch=16,cex=1.1,col="red")
abline(h=0,col=1,lwd=1)
# Fit seasonal vB curve, parameters = Linf, K, t0, C, s, sigma
svb <- function(p,ages,inc=52) {
return(p[1]*(1 - exp(-(p[4] * sin(2*pi*(ages - p[5])/inc) +
p[2] * (ages - p[3])))))
} # end of svB
spars <- c(bestvB$estimate[1:3],0.1,5,2.0)  # keep sigma at end
bestsvb <- nlm(f=negNLL,p=spars,funk=svb,ages=week,observed=length,
typsize=magnitude(spars))
predLs <- svb(bestsvb$estimate,0:160)
outfit(bestsvb,backtran = FALSE,title="Seasonal Growth",
parnames=c("Linf","K","t0","C","s","sigma"))
#| label: fig-5_2
#| fig-cap: |
#|   Pitcher 和 Macdonald（1973）的近似龄长数据与 von Bertalanffy 生长曲线的拟合季节版本。
#|   下图是正态随机残差图，残差仍有一系列高于和低于零的运行，但不如非季节性曲线那么有规律。
#Plot seasonal growth curve and residuals   Figure 5.2
parset(plots=c(2,1))  # MQMF utility wrapper function
plot1(week,length,type="p",cex=0.9,col=2,xlab="Weeks",pch=16,
ylab="Length (mm)",defpar=FALSE)
lines(0:160,predLs,lwd=2,col=1)
# calculate and plot the residuals
resids <- length - svb(bestsvb$estimate,week)
plot1(week,resids,type="l",col="darkgrey",cex=0.9,xlab="Weeks",
lty=3,ylab="Normal Residuals",defpar=FALSE)
points(week,resids,pch=16,cex=1.1,col="red")
abline(h=0,col=1,lwd=1)
#| label: fig-5_3
#| fig-cap: |
#|   Tagging data collected for blacklip abalone from Black Island off the south-west corner of Tasmania.
#|   The time interval between tagging and recapture averaged 1.02 years.
# tagging growth increment data from Black Island, Tasmania
data(blackisland);  bi <- blackisland # just to keep things brief
parset()
plot(bi$l1,bi$dl,type="p",pch=16,cex=1.0,col=2,ylim=c(-1,33),
ylab="Growth Increment mm",xlab="Initial Length mm",
panel.first = grid())
abline(h=0,col=1)
#| label: fig-5_4
#| fig-cap: |
#|   黑岛黑唇鲍标记数据的von Betalanffy（黑色）、逆 logistic （红色曲线虚线）和线性回归（黄色虚线）拟合。
#|   标记与回捕之间的时间间隔为 1.02 年。显然，vB 和线性回归是相同的。
#growth curves and regression fitted to tagging data Fig 5.4
parset(margin=c(0.4,0.4,0.05,0.05))
plot(bi$l1,bi$dl,type="p",pch=16,cex=1.0,col=3,ylim=c(-2,31),
ylab="Growth Increment mm",xlab="Length mm",panel.first=grid())
abline(h=0,col=1)
lines(bi$l1,predvB,pch=16,col=1,lwd=3,lty=1)  # vB
install.packages(c("AER", "broom", "car", "duckdb", "glmmTMB", "httr2", "lavaan", "rgbif", "robustbase", "spAbundance"))
install.packages(c("AER", "BRugs", "crosstable", "fields", "glue", "httr2", "jsonlite", "lmom", "memisc", "phylolm", "ps", "ridigbio", "RPostgreSQL", "SpatialPack"))
install.packages(c("askpass", "bitops", "cards", "commonmark", "credentials", "crosstable", "datawizard", "dendextend", "dotCall64", "earth", "fasterize", "fields", "fishMod", "geosphere", "gifski", "GISTools", "glue", "gplots", "gt", "gtsummary", "huxtable", "insight", "instantiate", "lmom", "marginaleffects", "msm", "phylolm", "pool", "qpdf", "QuickJSR", "raster", "rbibutils", "Rcmdr", "renv", "ridigbio", "RPostgreSQL", "secretbase", "servr", "smooth", "spAbundance", "spam", "spatialsample", "statnet.common", "strex", "sys", "targets", "tinytable", "writexl", "xfun"))
install.packages("adw")
install.packages("akima")
remotes::install_github("NERC-CEH/jsdmstan")
#| echo: false
library(MQMF)
#vB growth curve fit to Pitcher and Macdonald derived seasonal data
data(minnow); week <- minnow$week; length <- minnow$length
pars <- c(75,0.1,-10.0,3.5); label=c("Linf","K","t0","sigma")
bestvB <- nlm(f=negNLL,p=pars,funk=vB,ages=week,observed=length,
typsize=magnitude(pars))
predL <- vB(bestvB$estimate,0:160)
outfit(bestvB,backtran = FALSE,title="Non-Seasonal vB",parnames=label)
#| label: fig-5_1
#| fig-cap: |
#|   年龄长度数据来自 Pitcher 和 Macdonald（1973 年），与最佳拟合的 von Bertalanffy 曲线相比，
#|   显示出生长率的强烈季节性波动。下图中的正态随机残差的季节性模式非常明显，并随着年龄的增长而减小。
#plot the non-seasonal fit and its residuals.  Figure 5.1
parset(plots=c(2,1),margin=c(0.35,0.45,0.02,0.05))
plot1(week,length,type="p",cex=1.0,col=2,xlab="Weeks",pch=16,
ylab="Length (mm)",defpar=FALSE)
lines(0:160,predL,lwd=2,col=1)
# calculate and plot the residuals
resids <- length - vB(bestvB$estimate,week)
plot1(week,resids,type="l",col="darkgrey",cex=0.9,lwd=2,
xlab="Weeks",lty=3,ylab="Normal Residuals",defpar=FALSE)
points(week,resids,pch=16,cex=1.1,col="red")
abline(h=0,col=1,lwd=1)
# Fit seasonal vB curve, parameters = Linf, K, t0, C, s, sigma
svb <- function(p,ages,inc=52) {
return(p[1]*(1 - exp(-(p[4] * sin(2*pi*(ages - p[5])/inc) +
p[2] * (ages - p[3])))))
} # end of svB
spars <- c(bestvB$estimate[1:3],0.1,5,2.0)  # keep sigma at end
bestsvb <- nlm(f=negNLL,p=spars,funk=svb,ages=week,observed=length,
typsize=magnitude(spars))
predLs <- svb(bestsvb$estimate,0:160)
outfit(bestsvb,backtran = FALSE,title="Seasonal Growth",
parnames=c("Linf","K","t0","C","s","sigma"))
#| label: fig-5_2
#| fig-cap: "Pitcher 和 Macdonald（1973）的近似龄长数据与 von Bertalanffy 生长曲线的拟合季节版本。下图是正态随机残差图，残差仍有一系列高于和低于零的运行，但不如非季节性曲线那么有规律。"
#Plot seasonal growth curve and residuals   Figure 5.2
parset(plots=c(2,1))  # MQMF utility wrapper function
plot1(week,length,type="p",cex=0.9,col=2,xlab="Weeks",pch=16,
ylab="Length (mm)",defpar=FALSE)
lines(0:160,predLs,lwd=2,col=1)
# calculate and plot the residuals
resids <- length - svb(bestsvb$estimate,week)
plot1(week,resids,type="l",col="darkgrey",cex=0.9,xlab="Weeks",
lty=3,ylab="Normal Residuals",defpar=FALSE)
points(week,resids,pch=16,cex=1.1,col="red")
abline(h=0,col=1,lwd=1)
#| label: fig-5_3
#| fig-cap: |
#|   Tagging data collected for blacklip abalone from Black Island off the south-west corner of Tasmania.
#|   The time interval between tagging and recapture averaged 1.02 years.
# tagging growth increment data from Black Island, Tasmania
data(blackisland);  bi <- blackisland # just to keep things brief
parset()
plot(bi$l1,bi$dl,type="p",pch=16,cex=1.0,col=2,ylim=c(-1,33),
ylab="Growth Increment mm",xlab="Initial Length mm",
panel.first = grid())
abline(h=0,col=1)
# Fit the vB and Inverse Logistic to the tagging data
linm <- lm(bi$dl ~ bi$l1) # simple linear regression
param <- c(170.0,0.3,4.0); label <- c("Linf","K","sigma")
modelvb <- nlm(f=negNLL,p=param,funk=fabens,observed=bi$dl,indat=bi,
initL="l1",delT="dt") # could have used the defaults
outfit(modelvb,backtran = FALSE,title="vB",parnames=label)
predvB <- fabens(modelvb$estimate,bi)
cat("\n")
param2 <- c(25.0,130.0,35.0,3.0)
label2=c("MaxDL","L50","delta","sigma")
modelil <- nlm(f=negNLL,p=param2,funk=invl,observed=bi$dl,indat=bi,
initL="l1",delT="dt")
outfit(modelil,backtran = FALSE,title="IL",parnames=label2)
predil <- invl(modelil$estimate,bi)
#| label: fig-5_4
#| fig-cap: |
#|   黑岛黑唇鲍标记数据的von Betalanffy（黑色）、逆 logistic （红色曲线虚线）和线性回归（黄色虚线）拟合。
#|   标记与回捕之间的时间间隔为 1.02 年。显然，vB 和线性回归是相同的。
#growth curves and regression fitted to tagging data Fig 5.4
parset(margin=c(0.4,0.4,0.05,0.05))
plot(bi$l1,bi$dl,type="p",pch=16,cex=1.0,col=3,ylim=c(-2,31),
ylab="Growth Increment mm",xlab="Length mm",panel.first=grid())
abline(h=0,col=1)
lines(bi$l1,predvB,pch=16,col=1,lwd=3,lty=1)  # vB
lines(bi$l1,predil,pch=16,col=2,lwd=3,lty=2)  # IL
abline(linm,lwd=3,col=7,lty=2) # add dashed linear regression
legend("topright",c("vB","LinReg","IL"),lwd=3,bty="n",cex=1.2,
col=c(1,7,2),lty=c(1,2,2))
#| label: fig-5_5
#| fig-cap: |
#|   黑岛黑唇鲍标记数据的 von Betalanffy 曲线残差图（左侧）和 逆 Logistic 曲线残差图（右侧）。标记与回捕之间的时间间隔为 1.02 年。
#residuals for vB and inverse logistic for tagging data Fig 5.5
parset(plots=c(1,2),outmargin=c(1,1,0,0),margin=c(.25,.25,.05,.05))
plot(bi$l1,(bi$dl - predvB),type="p",pch=16,col=1,ylab="",
xlab="",panel.first=grid(),ylim=c(-8,11))
abline(h=0,col=1)
mtext("vB",side=1,outer=FALSE,line=-1.1,cex=1.2,font=7)
plot(bi$l1,(bi$dl - predil),type="p",pch=16,col=1,ylab="",
xlab="",panel.first=grid(),ylim=c(-8,11))
abline(h=0,col=1)
mtext("IL",side=3,outer=FALSE,line=-1.2,cex=1.2,font=7)
mtext("Length mm",side=1,line=-0.1,cex=1.0,font=7,outer=TRUE)
mtext("Residual",side=2,line=-0.1,cex=1.0,font=7,outer=TRUE)
# fit the Fabens tag growth curve with and without the option to
# modify variation with predicted length. See the MQMF function
# negnormL. So first no variation and then linear variation.
sigfunk <- function(pars,predobs) return(tail(pars,1)) #no effect
data(blackisland)
bi <- blackisland # just to keep things brief
param <- c(170.0,0.3,4.0); label=c("Linf","K","sigma")
modelvb <- nlm(f=negnormL,p=param,funk=fabens,funksig=sigfunk,
indat=bi,initL="l1",delT="dt")
outfit(modelvb,backtran = FALSE,title="vB constant sigma",
parnames = label)
#| label: fig-5_6
#| fig-cap: |
#|   与黑岛黑唇鲍标记数据拟合的具有恒定 sigma von Bertalanffy（皇家蓝）和
#|   具有与不断变化的 DeltaL 相关的 sgima 的 von Bertalanffy（红色虚线）。
#|   标记与再捕之间的平均时间间隔为 1.02 年。
#plot to two Faben's lines with constant and varying sigma Fig 5.6
predvB <- fabens(modelvb$estimate,bi)
predvB2 <- fabens(modelvb2$estimate,bi)
parset(margin=c(0.4,0.4,0.05,0.05))
plot(bi$l1,bi$dl,type="p",pch=1,cex=1.0,col=1,ylim=c(-2,31),
ylab="Growth Increment mm",xlab="Length mm",panel.first=grid())
abline(h=0,col=1)
lines(bi$l1,predvB,col=1,lwd=2)         # vB
lines(bi$l1,predvB2,col=2,lwd=2,lty=2)  # IL
legend("topright",c("Constant sigma","Changing sigma"),lwd=3,
col=c(1,2),bty="n",cex=1.1,lty=c(1,2))
sigfunk2 <- function(pars,predo) { # linear with predicted length
sig <- tail(pars,1) * predo      # sigma x predDL, see negnormL
pick <- which(sig <= 0)          # ensure no negative sigmas from
sig[pick] <- 0.01           # possible negative predicted lengths
return(sig)
} # end of sigfunk2
param <- c(170.0,0.3,1.0); label=c("Linf","K","sigma")
modelvb2 <- nlm(f=negnormL,p=param,funk=fabens,funksig=sigfunk2,
indat=bi,initL="l1",delT="dt",
typsize=magnitude(param),iterlim=200)
outfit(modelvb2,backtran = FALSE,parnames = label,
title="vB inverse DeltaL, sigma < 1")
#| label: fig-5_6
#| fig-cap: |
#|   与黑岛黑唇鲍标记数据拟合的具有恒定 sigma von Bertalanffy（皇家蓝）和
#|   具有与不断变化的 DeltaL 相关的 sgima 的 von Bertalanffy（红色虚线）。
#|   标记与再捕之间的平均时间间隔为 1.02 年。
#plot to two Faben's lines with constant and varying sigma Fig 5.6
predvB <- fabens(modelvb$estimate,bi)
predvB2 <- fabens(modelvb2$estimate,bi)
parset(margin=c(0.4,0.4,0.05,0.05))
plot(bi$l1,bi$dl,type="p",pch=1,cex=1.0,col=1,ylim=c(-2,31),
ylab="Growth Increment mm",xlab="Length mm",panel.first=grid())
abline(h=0,col=1)
lines(bi$l1,predvB,col=1,lwd=2)         # vB
lines(bi$l1,predvB2,col=2,lwd=2,lty=2)  # IL
legend("topright",c("Constant sigma","Changing sigma"),lwd=3,
col=c(1,2),bty="n",cex=1.1,lty=c(1,2))
#compare the relative model fits of Vb and IL
cat("von Bertalanffy \n")
aicbic(modelvb,bi)
cat("inverse-logistic \n")
aicbic(modelil,bi)
# Likelihood ratio comparison of two growth models see Fig 5.4
vb <- modelvb$minimum # their respective -ve log-likelihoods
il <- modelil$minimum
dof <- 1
round(likeratio(vb,il,dof),8)
# The Maturity data from tasab data-set
data(tasab)       # see ?tasab for a list of the codes used
properties(tasab) # summarize properties of columns in tasab
table(tasab$site,tasab$sex) # sites 1 & 2 vs F, I, and M
#| label: fig-5_7
#| fig-cap: "tasab 数据集中黑唇鲍鱼成熟数据的长度成熟比例。"
#plot the proportion mature vs shell length  Fig 5.7
propm <- tapply(tasab$mature,tasab$length,mean) #mean maturity at L
lens <- as.numeric(names(propm))            # lengths in the data
plot1(lens,propm,type="p",cex=0.9,xlab="Length mm",
ylab="Proportion Mature")
#Use glm to estimate mature logistic
binglm <- function(x,digits=6) { #function to simplify printing
out <- summary(x)
print(out$call)
print(round(out$coefficients,digits))
cat("\nNull Deviance  ",out$null.deviance,"df",out$df.null,"\n")
cat("Resid.Deviance ",out$deviance,"df",out$df.residual,"\n")
cat("AIC  = ",out$aic,"\n\n")
return(invisible(out)) # retain the full summary
} #end of binglm
tasab$site <- as.factor(tasab$site) # site as a factor
smodel <- glm(mature ~ site + length,family=binomial,data=tasab)
outs <- binglm(smodel)  #outs contains the whole summary object
model <- glm(mature ~ length, family=binomial, data=tasab)
outm <- binglm(model)
cof <- outm$coefficients
cat("Lm50 = ",-cof[1,1]/cof[2,1],"\n")
cat("IQ   = ",2*log(3)/cof[2,1],"\n")
#| label: fig-5_8
#| fig-cap: "黑唇牡蛎成熟度数据（tasab 数据集）的长度成熟比例。不考虑站点的综合分析（两者）更接近站点 2（点划线）而非站点 1（划线），这反映了站点 2 样本量更大。"
#Add maturity logistics to the maturity data plot Fig 5.8
propm <- tapply(tasab$mature,tasab$length,mean) #prop mature
lens <- as.numeric(names(propm))       # lengths in the data
pick <- which((lens > 79) & (lens < 146))
parset()
plot(lens[pick],propm[pick],type="p",cex=0.9, #the data points
xlab="Length mm",ylab="Proportion Mature",pch=1)
L <- seq(80,145,1) # for increased curve separation
pars <- coef(smodel)
lines(L,mature(pars[1],pars[3],L),lwd=3,col=3,lty=2)
lines(L,mature(pars[1]+pars[2],pars[3],L),lwd=3,col=2,lty=4)
lines(L,mature(coef(model)[1],coef(model)[2],L),lwd=2,col=1,lty=1)
abline(h=c(0.25,0.5,0.75),lty=3,col="grey")
legend("topleft",c("site1","both","site2"),col=c(3,1,2),lty=c(2,1,4),
lwd=3,bty="n")
#| label: fig-5_9
#| fig-cap: "使用 Schnute 和 Richards 统一生长曲线的假设示例中达到成熟长度的比例。通过绿色虚线所示的四分位距左右两侧的差异，展示了该逻辑斯蒂曲线的不对称性。"
#Asymmetrical maturity curve from Schnute and Richard's curve Fig5.9
L = seq(50,160,1)
p=c(a=0.07,b=0.2,c=1.0,alpha=100)
asym <- srug(p=p,sizeage=L)
L25 <- linter(bracket(0.25,asym,L))
L50 <- linter(bracket(0.5,asym,L))
L75 <- linter(bracket(0.75,asym,L))
parset()
plot(L,asym,type="l",lwd=2,xlab="Length mm",ylab="Proportion Mature")
abline(h=c(0.25,0.5,0.75),lty=3,col="grey")
abline(v=c(L25,L50,L75),lwd=c(1,2,1),col=c(1,2,1))
#| label: fig-5_11
#| fig-cap: "有恒定 a = 1000 和五个递减的 b 值的贝特伦-霍尔特种群补充曲线，导致越来越高效的曲线。"
#plot the MQMF bh function for Beverton-Holt recruitment  Fig 5.11
B <- 1:3000
bhb <- c(1000,500,250,150,50)
parset()
plot(B,bh(c(1000,bhb[1]),B),type="l",ylim=c(0,1050),
xlab="Spawning Biomass",ylab="Recruitment")
for (i in 2:5) lines(B,bh(c(1000,bhb[i]),B),lwd=2,col=i,lty=i)
legend("bottomright",legend=bhb,col=c(1:5),lwd=3,bty="n",lty=c(1:5))
abline(h=c(500,1000),col=1,lty=2)
#| label: fig-5_13
#| fig-cap: "Beverton-Holt (BH)、Ricker 和 Deriso-Schnute (DS) 种群-补充量曲线的比较，这些曲线在 Deriso-Schnute 通用方程 Equ (5.19) 中实现。对于 DS 曲线， $\gamma = 0.5$ 导致不切实际的结果（奇线）。"
# plot of three special cases from Deriso-Schnute curve  Fig. 5.13
deriso <- function(p,B) return(p[1] * B *(1 - p[2]*p[3]*B)^(1/p[3]))
B <- 1:10000
plot1(B,deriso(c(10,0.001,-1),B),lwd=2,
xlab="Spawning Biomass",ylab="Recruitment")       # BH
lines(B,deriso(c(10,0.0004,0.25),B),lwd=2,col=2,lty=2)  # DS
lines(B,deriso(c(10,0.0004,1e-06),B),lwd=2,col=3,lty=3) # Ricker
lines(B,deriso(c(10,0.0004,0.5),B),lwd=2,col=1,lty=3)   # odd line
legend(x=7000,y=8500,legend=c("BH","DS","Ricker","odd line"),
col=c(1,2,3,1),lty=c(1,2,3,3),bty="n",lwd=3)
#| label: fig-5_14
#| fig-cap: " logist() 和 mature() 函数的逻辑 S 形曲线示例。虚线红色和实线黑色曲线具有相同的 L50，但梯度不同。点线绿色展示了改变 mature() 函数的 b 参数的效果，而交叉线蓝色曲线展示了刀刃式选择。图例显示了 L50 和使用的方程。"
#Selectivity curves from logist and mature functions  See Fig 5.14
ages <- seq(0,50,1);   in50 <- 25.0
sel1 <- logist(in50,12,ages)         #-3.65/0.146=L50=25.0
sel2 <- mature(-3.650425,0.146017,sizeage=ages)
sel3 <- mature(-6,0.2,ages)
sel4 <- logist(22.0,14,ages,knifeedge = TRUE)
plot1(ages,sel1,xlab="Age Years",ylab="Selectivity",cex=0.75,lwd=2)
lines(ages,sel2,col=2,lwd=2,lty=2)
lines(ages,sel3,col=3,lwd=2,lty=3)
lines(ages,sel4,col=4,lwd=2,lty=4)
abline(v=in50,col=1,lty=2); abline(h=0.5,col=1,lty=2)
legend("topleft",c("25_eq5.30","25_eq5.31","30_eq5.31","22_eq5.30N"),
col=c(1,2,3,4),lwd=3,cex=1.1,bty="n",lty=c(1:4))
#| label: fig-5_15
#| fig-cap: "由函数 domed() 产生的三个拱形选择性曲线示例，改变了达到选择性 1.0 的初始年龄（10、8、9），以及停止时的年龄（11、12、10），以及最终年龄组的选择性。"
#Examples of domed-shaped selectivity curves from domed. Fig.5.15
L <- seq(1,30,1)
p <- c(10,11,16,33,-5,-2)
plot1(L,domed(p,L),type="l",lwd=2,ylab="Selectivity",xlab="Age Years")
p1 <- c(8,12,16,33,-5,-1)
lines(L,domed(p1,L),lwd=2,col=2,lty=2)
p2 <- c(9,10,16,33,-5,-4)
lines(L,domed(p2,L),lwd=2,col=4,lty=4)
install.packages(c("adehabitatLT", "AER", "aplot", "bayesplot", "blockCV", "CircStats", "cli", "curl", "data.table", "Deriv", "duckdb", "EFAtools", "evaluate", "explore", "fluxweb", "gganimate", "ggforce", "ggfun", "gghighlight", "ggnewscale", "hypervolume", "limSolve", "marginaleffects", "packrat", "patchwork", "permute", "plotly", "psych", "quantmod", "reshape", "rgl", "rlang", "RPostgreSQL", "rsconnect", "Rsolnp", "scatterpie", "sdmTMB", "shiny", "simecol", "smoothr", "tensor", "thematic", "weights"))
install.packages(c("cli", "EFAtools", "evaluate", "explore", "fluxweb", "gganimate", "ggforce", "ggfun", "gghighlight", "ggnewscale", "hypervolume", "limSolve", "marginaleffects", "packrat", "patchwork", "permute", "plotly", "psych", "quantmod", "reshape", "rgl", "rlang", "RPostgreSQL", "rsconnect", "Rsolnp", "scatterpie", "sdmTMB", "shiny", "simecol", "smoothr", "tensor", "thematic", "weights"))
library(MQMF)
library(ggplot2)
#setup optimization using growth and ssq
data(LatA)      # try ?LatA   assumes library(MQMF) already run
head(LatA)
vB <- function(p, ages) return(p[1]*(1-exp(-p[2]*(ages-p[3]))))
Gz <- function(p, ages) return(p[1]*exp(-p[2]*exp(p[3]*ages)))
mm <- function(p, ages) return((p[1]*ages)/(p[2] + ages^p[3]))
vB
#specific function to calc ssq. The ssq within MQMF is more
ssq <- function(p,funk,agedata,observed) {        #general and is
predval <- funk(p,agedata)        #not limited to p and agedata
return(sum((observed - predval)^2,na.rm=TRUE))
} #end of ssq
# guess starting values for Linf, K, and t0, names not needed
pars <- c("Linf"=27.0,"K"=0.15,"t0"=-2.0) #ssq should=1478.449
pars
ssq(p=pars, funk=vB, agedata=LatA$age, observed=LatA$length)
#| echo: false
library(MQMF)
library(knitr)
#| label: fig-3_1
#| fig-cap: "dd"
surprod <- function(Nt,r,K) return((r*Nt)*(1-(Nt/K)))
densdep <- function(Nt,K) return((1-(Nt/K)))
r <- 1.2; K <- 1000.0; Nt <- seq(10,1000,10)
par(mfrow=c(2,1),mai=c(0.4,0.4,0.05,0.05),oma=c(0.0,0,0.0,0.0))
par(cex=0.75, mgp=c(1.35,0.35,0), font.axis=7,font=7,font.lab=7)
plot1(Nt,surprod(Nt,r,K),xlab="Population Nt",defpar=FALSE,
ylab="Production")
plot1(Nt,densdep(Nt,K),xlab="Population Nt",defpar=FALSE,
ylab="Density-Dependence")
#| echo: false
library(MQMF)
library(knitr)
#| label: fig-3-1
#| fig-cap: "离散 Schaefer（1954，1957）剩余生产模型的完整生产曲线以及与种群大小相当的等效线性密度依赖关系。"
surprod <- function(Nt,r,K) return((r*Nt)*(1-(Nt/K)))
densdep <- function(Nt,K) return((1-(Nt/K)))
r <- 1.2; K <- 1000.0; Nt <- seq(10,1000,10)
par(mfrow=c(2,1),mai=c(0.4,0.4,0.05,0.05),oma=c(0.0,0,0.0,0.0))
par(cex=0.75, mgp=c(1.35,0.35,0), font.axis=7,font=7,font.lab=7)
plot1(Nt,surprod(Nt,r,K),xlab="Population Nt",defpar=FALSE,
ylab="Production")
plot1(Nt,densdep(Nt,K),xlab="Population Nt",defpar=FALSE,
ylab="Density-Dependence")
#| label: fig-3-2
#| fig-cap: "Schaefer 模型动态。左图是按年份的数值，展示了从 r 值为 2.8 开始的混沌动态。右图是时间 t+1 的数值与时间 t 的关系，称为相图。最后 20%的点用红色标出以展示任何平衡行为。灰色对角线是 1:1 线。"
#Code for Figure 3.2. Try varying the value of rv from 0.5-2.8
yrs <- 100; rv=2.8;  Kv <- 1000.0; Nz=100; catch=0.0; p=1.0
ans <- discretelogistic(r=rv,K=Kv,N0=Nz,Ct=catch,Yrs=yrs,p=p)
avcatch <- mean(ans[(yrs-50):yrs,"nt"],na.rm=TRUE) #used in text
label <- paste0("r=",rv," K=",Kv," Ct=",catch, " N0=",Nz," p=",p=p)
plot(ans, main=label, cex=0.9, font=7) #Schaefer dynamics
#run discrete logistic dynamics for 600 years
yrs=600
ans <- discretelogistic(r=2.55,K=1000.0,N0=100,Ct=0.0,Yrs=yrs)
#| label: tbl-3-1
#| tbl-cap: "ans 对象中最后 30 个按年排列的数字，展示了在 r = 2.2 时呈现 8 周期稳定极限。如果你在 discretelogistic() 中尝试 r = 2.2，它将导致 2 周期稳定极限在 746.24 和 1162.84 之间波动。尝试使用 plot(ans) 并观察每次变化。"
# layout-ncol: 1
kable(halftable(ans[(yrs-29):yrs,],yearcol="year",subdiv=3),
digits=c(0,1,1,0,1,1,0,1,1))
#run discretelogistic and search for repeated values of Nt
yrs <- 600
ans <- discretelogistic(r=2.55,K=1000.0,N0=100,Ct=0.0,Yrs=yrs)
avt <- round(apply(ans[(yrs-100):(yrs-1),2:3],1,mean),2)
count <- table(avt)
count[count > 1] # with r=2.55 you should find an 8-cycle limit
#searches for unique solutions given an r value  see Table 3.2
testseq <- seq(1.9,2.59,0.01)
nseq <- length(testseq)
result <- matrix(0,nrow=nseq,ncol=2,
dimnames=list(testseq,c("r","Unique")))
yrs <- 600
for (i in 1:nseq) {  # i = 31
rval <- testseq[i]
ans <- discretelogistic(r=rval,K=1000.0,N0=100,Ct=0.0,Yrs=yrs)
ans <- ans[-yrs,] # remove last year, see str(ans) for why
ans[,"nt1"] <- round(ans[,"nt1"],3) #try hashing this out
result[i,] <- c(rval,length(unique(tail(ans[,"nt1"],100))))
}
#| label: tbl-3-2
#| tbl-cap: "Schaefer 模型动态。结果内容：在 600 年的预测动态中，从不同 r 值获得的 60 年内独特种群数量（N）。100 表示非平衡甚至混沌。"
kable(halftable(result,yearcol = "r", subdiv=3),)
#| label: tbl-3-2
#| tbl-cap: "Schaefer 模型动态。结果内容：在 600 年的预测动态中，从不同 r 值获得的 60 年内独特种群数量（N）。100 表示非平衡甚至混沌。"
kable(halftable(result,yearcol = "r", subdiv=3),digits=c(0,1,1,0,1,1,0,1,1))
install.packages(c("anytime", "automap", "commonmark", "CompQuadForm", "CopernicusMarine", "correlation", "cowplot", "data.table", "datawizard", "dendextend", "dfidx", "doFuture", "duckdb", "duckdbfs", "emmeans", "fmesher", "geomtextpath", "geostan", "GGally", "ggfun", "ggpmisc", "glmnet", "gstat", "httr2", "inlabru", "lamW", "mlogit", "modelbased", "parameters", "pbapply", "pbkrtest", "performance", "projpred", "purrr", "reticulate", "Rmpfr", "RODBC", "RPostgreSQL", "rprojroot", "RSQLite", "sampling", "sdm", "sjPlot", "spatstat.geom", "spatstat.univar", "spatstat.utils", "terra", "TreeTools", "waldo"))
install.packages(c("cli", "ENMTools", "geomtextpath", "httr2", "reticulate", "rlang", "RPostgreSQL", "spatstat.explore", "TreeTools"))
install.packages(c("arrow", "berryFunctions", "betapart", "broom", "cartography", "crul", "DALEX", "DataExplorer", "DEoptimR", "FactoMineR", "ggfortify", "ggm", "httr2", "lemon", "meta", "parallelly", "pixmap", "plot3D", "quarto", "R2WinBUGS", "RcmdrMisc", "renv", "rnaturalearth", "RODBC", "rpart.plot", "RPostgreSQL", "rredlist", "skimr", "spatstat", "spatstat.explore", "spatstat.linnet", "spatstat.model", "statsExpressions", "tmaptools", "vcdExtra"))
install.packages("EcoEnsemble")
